{"version":3,"sources":["Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","useState","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","valid","p","check","match","length","test","className","class","type","placeholder","value","onChange","e","target","style","color","fontSize","onClick","preventDefault","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JA2HeA,EAxHA,WACX,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAA0CV,mBAAS,IAAnD,mBAAOW,EAAP,KAAsBC,EAAtB,KAsCA,IAAMC,EAAQ,WACV,IAhBmBC,EAgBfC,GAAQ,EAcZ,MAba,KAATd,IACAO,EAAa,yBACbO,GAAQ,GAEE,KAAVZ,GAA+BA,EA5B1Ba,MADQ,mDA8BbN,EAAc,iBACdK,GAAQ,GAEK,KAAbV,KAzBeS,EAyBmBT,GAvBhCY,QAAU,GACZH,EAAEG,QAAU,IACZ,QAAQC,KAAKJ,IACb,QAAQI,KAAKJ,IACb,QAAQI,KAAKJ,IACb,eAAeI,KAAKJ,MAmBpBF,EAAiB,oBACjBG,GAAQ,GAGLA,GAEX,OACI,mCACI,qBAAKI,UAAU,aAAf,SACI,qBAAKC,MAAM,YAAX,SACI,qBAAKA,MAAM,SAAX,SACI,sBAAKA,MAAM,cAAX,UACI,qBAAKA,MAAM,wBAAX,SACI,qBAAKA,MAAM,YAAX,SACI,wCACS,uBADT,eAC2B,8BAInC,qBAAKA,MAAM,mBAAX,SACI,sBAAKA,MAAM,WAAX,UACI,sBAAKA,MAAM,iBAAX,UACI,uBACIC,KAAK,OAAOD,MAAM,mBAClBE,YAAY,aACZC,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAOvB,EAAQuB,EAAEC,OAAOH,UAEtC,mBAAGI,MAAO,CAAEC,MAAO,MAAMC,SAAS,QAAlC,SAA6CtB,OAEjD,sBAAKa,MAAM,iBAAX,UACI,uBACIC,KAAK,QAAQD,MAAM,mBACnBE,YAAY,cACZC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOH,UAEvC,mBAAGI,MAAO,CAAEC,MAAO,MAAMC,SAAS,QAAlC,SAA8CpB,OAElD,sBAAKW,MAAM,iBAAX,UACI,uBACIC,KAAK,WAAWD,MAAM,mBACtBE,YAAY,iBACZC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAEC,OAAOH,UAE1C,mBAAGI,MAAO,CAAEC,MAAO,MAAOC,SAAS,QAAnC,SAA+ClB,OAGnD,8BACI,wBAAUS,MAAM,kBAAkBU,QAjGnD,SAACL,GAChBA,EAAEM,iBACElB,MACAmB,MAAM,uCACNxB,EAAa,IACbE,EAAc,IACdE,EAAiB,IACjBV,EAAQ,IACRE,EAAS,IACTE,EAAY,MAwFgB,uCClGzB2B,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACC,cAAC,EAAD,OCOUe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f41abffc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './index.css';\r\nconst Signup = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [nameError, setNameError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (valid()) {\r\n            alert(' The form is successfully submitted');\r\n            setNameError('');\r\n            setEmailError('');\r\n            setPasswordError('');\r\n            setName('');\r\n            setEmail('');\r\n            setPassword('');\r\n        }\r\n    };\r\n    function ValidateEmail(mail) {\r\n        var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (mail.match(mailformat)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function CheckPassword(p) {\r\n        if (\r\n            p.length >= 7 &&\r\n            p.length <= 14 &&\r\n            /[a-z]/.test(p) &&\r\n            /[A-Z]/.test(p) &&\r\n            /[0-9]/.test(p) &&\r\n            /[^A-Za-z0-9]/.test(p)\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const valid = () => {\r\n        let check = true;\r\n        if (name === '') {\r\n            setNameError('please enter the name');\r\n            check = false;\r\n        }\r\n        if (email === '' || !ValidateEmail(email)) {\r\n            setEmailError('Invalid Email');\r\n            check = false;\r\n        }\r\n        if (password === '' || !CheckPassword(password)) {\r\n            setPasswordError('invalid password');\r\n            check = false;\r\n        }\r\n\r\n        return check;\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"background\">\r\n                <div class=\"container\">\r\n                    <div class=\"screen\">\r\n                        <div class=\"screen-body\">\r\n                            <div class=\"screen-body-item left\">\r\n                                <div class=\"app-title\">\r\n                                    <div >\r\n                                        Form <br /> Validation <br />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"screen-body-item\">\r\n                                <div class=\"app-form\">\r\n                                    <div class=\"app-form-group\">\r\n                                        <input\r\n                                            type=\"text\" class=\"app-form-control\"\r\n                                            placeholder=\"Enter name\"\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                        <p style={{ color: 'red',fontSize:\"15px\" }}>{nameError}</p>\r\n                                    </div>\r\n                                    <div class=\"app-form-group\">\r\n                                        <input\r\n                                            type=\"Email\" class=\"app-form-control\"\r\n                                            placeholder=\"Enter email\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                        />\r\n                                        <p style={{ color: 'red',fontSize:\"15px\"  }}>{emailError}</p>\r\n                                    </div>\r\n                                    <div class=\"app-form-group\">\r\n                                        <input\r\n                                            type=\"password\" class=\"app-form-control\"\r\n                                            placeholder=\"Enter password\"\r\n                                            value={password}\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                        />\r\n                                        <p style={{ color: 'red' ,fontSize:\"15px\"  }}>{passwordError}</p>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <button   class=\"app-from-button\" onClick={submitForm}>Submit</button>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Signup;","import Signup from './Signup'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Signup/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}